#!/bin/bash

set -e -u

function usage {
cat <<EOF
Usage: ./upgrade [option]
--major  upgrade major version
--minor  upgrade minor version
--micro  upgrade micro version (default)
-h --help  help
EOF
}

UPGRADE="micro"

set +u
while [ "$1" != "" ]; do
    case $1 in
        --major ) UPGRADE="major"
                  ;;
        --minor ) UPGRADE="minor"
                  ;;
        --micro ) UPGRADE="micro"
                  ;;
        -h | --help ) usage
                      exit
                      ;;
        * ) echo "Unknown parameter: $1"
            usage
            exit 1
    esac
    shift
done
set -u

IFS=. read major minor micro < version
OLD_VERSION="${major}.${minor}.${micro}"

if [ $UPGRADE == "major" ]; then
    NEW_VERSION="$((${major}+1)).${minor}.${micro}"
elif [ $UPGRADE == "minor" ]; then
    NEW_VERSION="${major}.$((${minor}+1)).${micro}"
else
    NEW_VERSION="${major}.${minor}.$((${micro}+1))"
fi

echo "from ${OLD_VERSION} to ${NEW_VERSION}"

set -x

sed -i "s/${OLD_VERSION}/${NEW_VERSION}/" version
sed -i "s/version = '${OLD_VERSION}'/version = '${NEW_VERSION}'/" kkoment.ts
sed -i "s/KKOMENT_VERSION = '${OLD_VERSION}'/KKOMENT_VERSION = '${NEW_VERSION}'/" ../KkExt.php
make
cp -r "../../kkoment.kkeun.net/${OLD_VERSION}" "../../kkoment.kkeun.net/${NEW_VERSION}"
cp kkoment.js "../../kkoment.kkeun.net/${NEW_VERSION}/"
